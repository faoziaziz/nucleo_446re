ARM GAS  /tmp/cclzpbi3.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_GPIO_Init,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	MX_GPIO_Init:
  26              	.LFB133:
  27              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * <h2><center>&copy; Copyright (c) 2020 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.</center></h2>
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Core/Src/main.c ****   * the "License"; You may not use this file except in compliance with the
  14:Core/Src/main.c ****   * License. You may obtain a copy of the License at:
  15:Core/Src/main.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Core/Src/main.c ****   *
  17:Core/Src/main.c ****   ******************************************************************************
  18:Core/Src/main.c ****   */
  19:Core/Src/main.c **** /* USER CODE END Header */
  20:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/main.c **** #include "main.h"
  22:Core/Src/main.c **** 
  23:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/main.c **** 
  26:Core/Src/main.c **** /* USER CODE END Includes */
  27:Core/Src/main.c **** 
  28:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  29:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  30:Core/Src/main.c **** 
  31:Core/Src/main.c **** /* USER CODE END PTD */
ARM GAS  /tmp/cclzpbi3.s 			page 2


  32:Core/Src/main.c **** 
  33:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  34:Core/Src/main.c **** /* USER CODE BEGIN PD */
  35:Core/Src/main.c **** /* USER CODE END PD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  38:Core/Src/main.c **** /* USER CODE BEGIN PM */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* USER CODE END PM */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  43:Core/Src/main.c **** UART_HandleTypeDef huart2;
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* USER CODE BEGIN PV */
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* USER CODE END PV */
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  50:Core/Src/main.c **** void SystemClock_Config(void);
  51:Core/Src/main.c **** static void MX_GPIO_Init(void);
  52:Core/Src/main.c **** static void MX_USART2_UART_Init(void);
  53:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  54:Core/Src/main.c **** 
  55:Core/Src/main.c **** /* USER CODE END PFP */
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  58:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** /* USER CODE END 0 */
  61:Core/Src/main.c **** 
  62:Core/Src/main.c **** /**
  63:Core/Src/main.c ****   * @brief  The application entry point.
  64:Core/Src/main.c ****   * @retval int
  65:Core/Src/main.c ****   */
  66:Core/Src/main.c **** int main(void)
  67:Core/Src/main.c **** {
  68:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  69:Core/Src/main.c **** 
  70:Core/Src/main.c ****   /* USER CODE END 1 */
  71:Core/Src/main.c **** 
  72:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  73:Core/Src/main.c **** 
  74:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  75:Core/Src/main.c ****   HAL_Init();
  76:Core/Src/main.c **** 
  77:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  78:Core/Src/main.c **** 
  79:Core/Src/main.c ****   /* USER CODE END Init */
  80:Core/Src/main.c **** 
  81:Core/Src/main.c ****   /* Configure the system clock */
  82:Core/Src/main.c ****   SystemClock_Config();
  83:Core/Src/main.c **** 
  84:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  85:Core/Src/main.c **** 
  86:Core/Src/main.c ****   /* USER CODE END SysInit */
  87:Core/Src/main.c **** 
  88:Core/Src/main.c ****   /* Initialize all configured peripherals */
ARM GAS  /tmp/cclzpbi3.s 			page 3


  89:Core/Src/main.c ****   MX_GPIO_Init();
  90:Core/Src/main.c ****   MX_USART2_UART_Init();
  91:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
  92:Core/Src/main.c **** 
  93:Core/Src/main.c ****   /* USER CODE END 2 */
  94:Core/Src/main.c **** 
  95:Core/Src/main.c ****   /* Infinite loop */
  96:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
  97:Core/Src/main.c ****   while (1)
  98:Core/Src/main.c ****   {
  99:Core/Src/main.c ****     /* USER CODE END WHILE */
 100:Core/Src/main.c **** 
 101:Core/Src/main.c **** 	  uint8_t data[]="Kalista\r\n";
 102:Core/Src/main.c **** 	  HAL_UART_Transmit(&huart2, data, sizeof(data), 10);
 103:Core/Src/main.c **** 	  HAL_Delay(1000);
 104:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 105:Core/Src/main.c ****   }
 106:Core/Src/main.c ****   /* USER CODE END 3 */
 107:Core/Src/main.c **** }
 108:Core/Src/main.c **** 
 109:Core/Src/main.c **** /**
 110:Core/Src/main.c ****   * @brief System Clock Configuration
 111:Core/Src/main.c ****   * @retval None
 112:Core/Src/main.c ****   */
 113:Core/Src/main.c **** void SystemClock_Config(void)
 114:Core/Src/main.c **** {
 115:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 116:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 117:Core/Src/main.c **** 
 118:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 119:Core/Src/main.c ****   */
 120:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 121:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 122:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 123:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 124:Core/Src/main.c ****   */
 125:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 126:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 127:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 128:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 129:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 130:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 16;
 131:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 336;
 132:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 133:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 134:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 135:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 136:Core/Src/main.c ****   {
 137:Core/Src/main.c ****     Error_Handler();
 138:Core/Src/main.c ****   }
 139:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 140:Core/Src/main.c ****   */
 141:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 142:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 143:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 144:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 145:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
ARM GAS  /tmp/cclzpbi3.s 			page 4


 146:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 147:Core/Src/main.c **** 
 148:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 149:Core/Src/main.c ****   {
 150:Core/Src/main.c ****     Error_Handler();
 151:Core/Src/main.c ****   }
 152:Core/Src/main.c **** }
 153:Core/Src/main.c **** 
 154:Core/Src/main.c **** /**
 155:Core/Src/main.c ****   * @brief USART2 Initialization Function
 156:Core/Src/main.c ****   * @param None
 157:Core/Src/main.c ****   * @retval None
 158:Core/Src/main.c ****   */
 159:Core/Src/main.c **** static void MX_USART2_UART_Init(void)
 160:Core/Src/main.c **** {
 161:Core/Src/main.c **** 
 162:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 0 */
 163:Core/Src/main.c **** 
 164:Core/Src/main.c ****   /* USER CODE END USART2_Init 0 */
 165:Core/Src/main.c **** 
 166:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 1 */
 167:Core/Src/main.c **** 
 168:Core/Src/main.c ****   /* USER CODE END USART2_Init 1 */
 169:Core/Src/main.c ****   huart2.Instance = USART2;
 170:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 171:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 172:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 173:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 174:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 175:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 176:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 177:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 178:Core/Src/main.c ****   {
 179:Core/Src/main.c ****     Error_Handler();
 180:Core/Src/main.c ****   }
 181:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 2 */
 182:Core/Src/main.c **** 
 183:Core/Src/main.c ****   /* USER CODE END USART2_Init 2 */
 184:Core/Src/main.c **** 
 185:Core/Src/main.c **** }
 186:Core/Src/main.c **** 
 187:Core/Src/main.c **** /**
 188:Core/Src/main.c ****   * @brief GPIO Initialization Function
 189:Core/Src/main.c ****   * @param None
 190:Core/Src/main.c ****   * @retval None
 191:Core/Src/main.c ****   */
 192:Core/Src/main.c **** static void MX_GPIO_Init(void)
 193:Core/Src/main.c **** {
  28              		.loc 1 193 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 40
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 30B5     		push	{r4, r5, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 12
  35              		.cfi_offset 4, -12
  36              		.cfi_offset 5, -8
ARM GAS  /tmp/cclzpbi3.s 			page 5


  37              		.cfi_offset 14, -4
  38 0002 8BB0     		sub	sp, sp, #44
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 56
 194:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  41              		.loc 1 194 3 view .LVU1
  42              		.loc 1 194 20 is_stmt 0 view .LVU2
  43 0004 0024     		movs	r4, #0
  44 0006 0594     		str	r4, [sp, #20]
  45 0008 0694     		str	r4, [sp, #24]
  46 000a 0794     		str	r4, [sp, #28]
  47 000c 0894     		str	r4, [sp, #32]
  48 000e 0994     		str	r4, [sp, #36]
 195:Core/Src/main.c **** 
 196:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 197:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  49              		.loc 1 197 3 is_stmt 1 view .LVU3
  50              	.LBB4:
  51              		.loc 1 197 3 view .LVU4
  52 0010 0194     		str	r4, [sp, #4]
  53              		.loc 1 197 3 view .LVU5
  54 0012 224B     		ldr	r3, .L3
  55 0014 1A6B     		ldr	r2, [r3, #48]
  56 0016 42F00402 		orr	r2, r2, #4
  57 001a 1A63     		str	r2, [r3, #48]
  58              		.loc 1 197 3 view .LVU6
  59 001c 1A6B     		ldr	r2, [r3, #48]
  60 001e 02F00402 		and	r2, r2, #4
  61 0022 0192     		str	r2, [sp, #4]
  62              		.loc 1 197 3 view .LVU7
  63 0024 019A     		ldr	r2, [sp, #4]
  64              	.LBE4:
  65              		.loc 1 197 3 view .LVU8
 198:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  66              		.loc 1 198 3 view .LVU9
  67              	.LBB5:
  68              		.loc 1 198 3 view .LVU10
  69 0026 0294     		str	r4, [sp, #8]
  70              		.loc 1 198 3 view .LVU11
  71 0028 1A6B     		ldr	r2, [r3, #48]
  72 002a 42F08002 		orr	r2, r2, #128
  73 002e 1A63     		str	r2, [r3, #48]
  74              		.loc 1 198 3 view .LVU12
  75 0030 1A6B     		ldr	r2, [r3, #48]
  76 0032 02F08002 		and	r2, r2, #128
  77 0036 0292     		str	r2, [sp, #8]
  78              		.loc 1 198 3 view .LVU13
  79 0038 029A     		ldr	r2, [sp, #8]
  80              	.LBE5:
  81              		.loc 1 198 3 view .LVU14
 199:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  82              		.loc 1 199 3 view .LVU15
  83              	.LBB6:
  84              		.loc 1 199 3 view .LVU16
  85 003a 0394     		str	r4, [sp, #12]
  86              		.loc 1 199 3 view .LVU17
  87 003c 1A6B     		ldr	r2, [r3, #48]
ARM GAS  /tmp/cclzpbi3.s 			page 6


  88 003e 42F00102 		orr	r2, r2, #1
  89 0042 1A63     		str	r2, [r3, #48]
  90              		.loc 1 199 3 view .LVU18
  91 0044 1A6B     		ldr	r2, [r3, #48]
  92 0046 02F00102 		and	r2, r2, #1
  93 004a 0392     		str	r2, [sp, #12]
  94              		.loc 1 199 3 view .LVU19
  95 004c 039A     		ldr	r2, [sp, #12]
  96              	.LBE6:
  97              		.loc 1 199 3 view .LVU20
 200:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  98              		.loc 1 200 3 view .LVU21
  99              	.LBB7:
 100              		.loc 1 200 3 view .LVU22
 101 004e 0494     		str	r4, [sp, #16]
 102              		.loc 1 200 3 view .LVU23
 103 0050 1A6B     		ldr	r2, [r3, #48]
 104 0052 42F00202 		orr	r2, r2, #2
 105 0056 1A63     		str	r2, [r3, #48]
 106              		.loc 1 200 3 view .LVU24
 107 0058 1B6B     		ldr	r3, [r3, #48]
 108 005a 03F00203 		and	r3, r3, #2
 109 005e 0493     		str	r3, [sp, #16]
 110              		.loc 1 200 3 view .LVU25
 111 0060 049B     		ldr	r3, [sp, #16]
 112              	.LBE7:
 113              		.loc 1 200 3 view .LVU26
 201:Core/Src/main.c **** 
 202:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 203:Core/Src/main.c ****   HAL_GPIO_WritePin(LD2_GPIO_Port, LD2_Pin, GPIO_PIN_RESET);
 114              		.loc 1 203 3 view .LVU27
 115 0062 0F4D     		ldr	r5, .L3+4
 116 0064 2246     		mov	r2, r4
 117 0066 2021     		movs	r1, #32
 118 0068 2846     		mov	r0, r5
 119 006a FFF7FEFF 		bl	HAL_GPIO_WritePin
 120              	.LVL0:
 204:Core/Src/main.c **** 
 205:Core/Src/main.c ****   /*Configure GPIO pin : B1_Pin */
 206:Core/Src/main.c ****   GPIO_InitStruct.Pin = B1_Pin;
 121              		.loc 1 206 3 view .LVU28
 122              		.loc 1 206 23 is_stmt 0 view .LVU29
 123 006e 4FF40053 		mov	r3, #8192
 124 0072 0593     		str	r3, [sp, #20]
 207:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 125              		.loc 1 207 3 is_stmt 1 view .LVU30
 126              		.loc 1 207 24 is_stmt 0 view .LVU31
 127 0074 0B4B     		ldr	r3, .L3+8
 128 0076 0693     		str	r3, [sp, #24]
 208:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 129              		.loc 1 208 3 is_stmt 1 view .LVU32
 130              		.loc 1 208 24 is_stmt 0 view .LVU33
 131 0078 0794     		str	r4, [sp, #28]
 209:Core/Src/main.c ****   HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
 132              		.loc 1 209 3 is_stmt 1 view .LVU34
 133 007a 05A9     		add	r1, sp, #20
 134 007c 0A48     		ldr	r0, .L3+12
ARM GAS  /tmp/cclzpbi3.s 			page 7


 135 007e FFF7FEFF 		bl	HAL_GPIO_Init
 136              	.LVL1:
 210:Core/Src/main.c **** 
 211:Core/Src/main.c ****   /*Configure GPIO pin : LD2_Pin */
 212:Core/Src/main.c ****   GPIO_InitStruct.Pin = LD2_Pin;
 137              		.loc 1 212 3 view .LVU35
 138              		.loc 1 212 23 is_stmt 0 view .LVU36
 139 0082 2023     		movs	r3, #32
 140 0084 0593     		str	r3, [sp, #20]
 213:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 141              		.loc 1 213 3 is_stmt 1 view .LVU37
 142              		.loc 1 213 24 is_stmt 0 view .LVU38
 143 0086 0123     		movs	r3, #1
 144 0088 0693     		str	r3, [sp, #24]
 214:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 145              		.loc 1 214 3 is_stmt 1 view .LVU39
 146              		.loc 1 214 24 is_stmt 0 view .LVU40
 147 008a 0794     		str	r4, [sp, #28]
 215:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 148              		.loc 1 215 3 is_stmt 1 view .LVU41
 149              		.loc 1 215 25 is_stmt 0 view .LVU42
 150 008c 0894     		str	r4, [sp, #32]
 216:Core/Src/main.c ****   HAL_GPIO_Init(LD2_GPIO_Port, &GPIO_InitStruct);
 151              		.loc 1 216 3 is_stmt 1 view .LVU43
 152 008e 05A9     		add	r1, sp, #20
 153 0090 2846     		mov	r0, r5
 154 0092 FFF7FEFF 		bl	HAL_GPIO_Init
 155              	.LVL2:
 217:Core/Src/main.c **** 
 218:Core/Src/main.c **** }
 156              		.loc 1 218 1 is_stmt 0 view .LVU44
 157 0096 0BB0     		add	sp, sp, #44
 158              	.LCFI2:
 159              		.cfi_def_cfa_offset 12
 160              		@ sp needed
 161 0098 30BD     		pop	{r4, r5, pc}
 162              	.L4:
 163 009a 00BF     		.align	2
 164              	.L3:
 165 009c 00380240 		.word	1073887232
 166 00a0 00000240 		.word	1073872896
 167 00a4 00002110 		.word	270598144
 168 00a8 00080240 		.word	1073874944
 169              		.cfi_endproc
 170              	.LFE133:
 172              		.section	.text.Error_Handler,"ax",%progbits
 173              		.align	1
 174              		.global	Error_Handler
 175              		.syntax unified
 176              		.thumb
 177              		.thumb_func
 178              		.fpu fpv4-sp-d16
 180              	Error_Handler:
 181              	.LFB134:
 219:Core/Src/main.c **** 
 220:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 221:Core/Src/main.c **** 
ARM GAS  /tmp/cclzpbi3.s 			page 8


 222:Core/Src/main.c **** /* USER CODE END 4 */
 223:Core/Src/main.c **** 
 224:Core/Src/main.c **** /**
 225:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 226:Core/Src/main.c ****   * @retval None
 227:Core/Src/main.c ****   */
 228:Core/Src/main.c **** void Error_Handler(void)
 229:Core/Src/main.c **** {
 182              		.loc 1 229 1 is_stmt 1 view -0
 183              		.cfi_startproc
 184              		@ Volatile: function does not return.
 185              		@ args = 0, pretend = 0, frame = 0
 186              		@ frame_needed = 0, uses_anonymous_args = 0
 187              		@ link register save eliminated.
 230:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 231:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 232:Core/Src/main.c ****   __disable_irq();
 188              		.loc 1 232 3 view .LVU46
 189              	.LBB8:
 190              	.LBI8:
 191              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
ARM GAS  /tmp/cclzpbi3.s 			page 9


  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/cclzpbi3.s 			page 10


  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 192              		.loc 2 140 27 view .LVU47
 193              	.LBB9:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 194              		.loc 2 142 3 view .LVU48
 195              		.syntax unified
 196              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 197 0000 72B6     		cpsid i
 198              	@ 0 "" 2
 199              		.thumb
ARM GAS  /tmp/cclzpbi3.s 			page 11


 200              		.syntax unified
 201              	.L6:
 202              	.LBE9:
 203              	.LBE8:
 233:Core/Src/main.c ****   while (1)
 204              		.loc 1 233 3 discriminator 1 view .LVU49
 234:Core/Src/main.c ****   {
 235:Core/Src/main.c ****   }
 205              		.loc 1 235 3 discriminator 1 view .LVU50
 233:Core/Src/main.c ****   while (1)
 206              		.loc 1 233 9 discriminator 1 view .LVU51
 207 0002 FEE7     		b	.L6
 208              		.cfi_endproc
 209              	.LFE134:
 211              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
 212              		.align	1
 213              		.syntax unified
 214              		.thumb
 215              		.thumb_func
 216              		.fpu fpv4-sp-d16
 218              	MX_USART2_UART_Init:
 219              	.LFB132:
 160:Core/Src/main.c **** 
 220              		.loc 1 160 1 view -0
 221              		.cfi_startproc
 222              		@ args = 0, pretend = 0, frame = 0
 223              		@ frame_needed = 0, uses_anonymous_args = 0
 224 0000 08B5     		push	{r3, lr}
 225              	.LCFI3:
 226              		.cfi_def_cfa_offset 8
 227              		.cfi_offset 3, -8
 228              		.cfi_offset 14, -4
 169:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 229              		.loc 1 169 3 view .LVU53
 169:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 230              		.loc 1 169 19 is_stmt 0 view .LVU54
 231 0002 0A48     		ldr	r0, .L11
 232 0004 0A4B     		ldr	r3, .L11+4
 233 0006 0360     		str	r3, [r0]
 170:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 234              		.loc 1 170 3 is_stmt 1 view .LVU55
 170:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 235              		.loc 1 170 24 is_stmt 0 view .LVU56
 236 0008 4FF4E133 		mov	r3, #115200
 237 000c 4360     		str	r3, [r0, #4]
 171:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 238              		.loc 1 171 3 is_stmt 1 view .LVU57
 171:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 239              		.loc 1 171 26 is_stmt 0 view .LVU58
 240 000e 0023     		movs	r3, #0
 241 0010 8360     		str	r3, [r0, #8]
 172:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 242              		.loc 1 172 3 is_stmt 1 view .LVU59
 172:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 243              		.loc 1 172 24 is_stmt 0 view .LVU60
 244 0012 C360     		str	r3, [r0, #12]
 173:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
ARM GAS  /tmp/cclzpbi3.s 			page 12


 245              		.loc 1 173 3 is_stmt 1 view .LVU61
 173:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 246              		.loc 1 173 22 is_stmt 0 view .LVU62
 247 0014 0361     		str	r3, [r0, #16]
 174:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 248              		.loc 1 174 3 is_stmt 1 view .LVU63
 174:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 249              		.loc 1 174 20 is_stmt 0 view .LVU64
 250 0016 0C22     		movs	r2, #12
 251 0018 4261     		str	r2, [r0, #20]
 175:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 252              		.loc 1 175 3 is_stmt 1 view .LVU65
 175:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 253              		.loc 1 175 25 is_stmt 0 view .LVU66
 254 001a 8361     		str	r3, [r0, #24]
 176:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 255              		.loc 1 176 3 is_stmt 1 view .LVU67
 176:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 256              		.loc 1 176 28 is_stmt 0 view .LVU68
 257 001c C361     		str	r3, [r0, #28]
 177:Core/Src/main.c ****   {
 258              		.loc 1 177 3 is_stmt 1 view .LVU69
 177:Core/Src/main.c ****   {
 259              		.loc 1 177 7 is_stmt 0 view .LVU70
 260 001e FFF7FEFF 		bl	HAL_UART_Init
 261              	.LVL3:
 177:Core/Src/main.c ****   {
 262              		.loc 1 177 6 view .LVU71
 263 0022 00B9     		cbnz	r0, .L10
 185:Core/Src/main.c **** 
 264              		.loc 1 185 1 view .LVU72
 265 0024 08BD     		pop	{r3, pc}
 266              	.L10:
 179:Core/Src/main.c ****   }
 267              		.loc 1 179 5 is_stmt 1 view .LVU73
 268 0026 FFF7FEFF 		bl	Error_Handler
 269              	.LVL4:
 270              	.L12:
 271 002a 00BF     		.align	2
 272              	.L11:
 273 002c 00000000 		.word	huart2
 274 0030 00440040 		.word	1073759232
 275              		.cfi_endproc
 276              	.LFE132:
 278              		.section	.text.SystemClock_Config,"ax",%progbits
 279              		.align	1
 280              		.global	SystemClock_Config
 281              		.syntax unified
 282              		.thumb
 283              		.thumb_func
 284              		.fpu fpv4-sp-d16
 286              	SystemClock_Config:
 287              	.LFB131:
 114:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 288              		.loc 1 114 1 view -0
 289              		.cfi_startproc
 290              		@ args = 0, pretend = 0, frame = 80
ARM GAS  /tmp/cclzpbi3.s 			page 13


 291              		@ frame_needed = 0, uses_anonymous_args = 0
 292 0000 00B5     		push	{lr}
 293              	.LCFI4:
 294              		.cfi_def_cfa_offset 4
 295              		.cfi_offset 14, -4
 296 0002 95B0     		sub	sp, sp, #84
 297              	.LCFI5:
 298              		.cfi_def_cfa_offset 88
 115:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 299              		.loc 1 115 3 view .LVU75
 115:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 300              		.loc 1 115 22 is_stmt 0 view .LVU76
 301 0004 3422     		movs	r2, #52
 302 0006 0021     		movs	r1, #0
 303 0008 07A8     		add	r0, sp, #28
 304 000a FFF7FEFF 		bl	memset
 305              	.LVL5:
 116:Core/Src/main.c **** 
 306              		.loc 1 116 3 is_stmt 1 view .LVU77
 116:Core/Src/main.c **** 
 307              		.loc 1 116 22 is_stmt 0 view .LVU78
 308 000e 0023     		movs	r3, #0
 309 0010 0293     		str	r3, [sp, #8]
 310 0012 0393     		str	r3, [sp, #12]
 311 0014 0493     		str	r3, [sp, #16]
 312 0016 0593     		str	r3, [sp, #20]
 313 0018 0693     		str	r3, [sp, #24]
 120:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 314              		.loc 1 120 3 is_stmt 1 view .LVU79
 315              	.LBB10:
 120:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 316              		.loc 1 120 3 view .LVU80
 317 001a 0093     		str	r3, [sp]
 120:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 318              		.loc 1 120 3 view .LVU81
 319 001c 1F4A     		ldr	r2, .L19
 320 001e 116C     		ldr	r1, [r2, #64]
 321 0020 41F08051 		orr	r1, r1, #268435456
 322 0024 1164     		str	r1, [r2, #64]
 120:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 323              		.loc 1 120 3 view .LVU82
 324 0026 126C     		ldr	r2, [r2, #64]
 325 0028 02F08052 		and	r2, r2, #268435456
 326 002c 0092     		str	r2, [sp]
 120:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 327              		.loc 1 120 3 view .LVU83
 328 002e 009A     		ldr	r2, [sp]
 329              	.LBE10:
 120:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 330              		.loc 1 120 3 view .LVU84
 121:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 331              		.loc 1 121 3 view .LVU85
 332              	.LBB11:
 121:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 333              		.loc 1 121 3 view .LVU86
 334 0030 0193     		str	r3, [sp, #4]
 121:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
ARM GAS  /tmp/cclzpbi3.s 			page 14


 335              		.loc 1 121 3 view .LVU87
 336 0032 1B49     		ldr	r1, .L19+4
 337 0034 0A68     		ldr	r2, [r1]
 338 0036 22F44042 		bic	r2, r2, #49152
 339 003a 42F48042 		orr	r2, r2, #16384
 340 003e 0A60     		str	r2, [r1]
 121:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 341              		.loc 1 121 3 view .LVU88
 342 0040 0A68     		ldr	r2, [r1]
 343 0042 02F44042 		and	r2, r2, #49152
 344 0046 0192     		str	r2, [sp, #4]
 121:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 345              		.loc 1 121 3 view .LVU89
 346 0048 019A     		ldr	r2, [sp, #4]
 347              	.LBE11:
 121:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 348              		.loc 1 121 3 view .LVU90
 125:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 349              		.loc 1 125 3 view .LVU91
 125:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 350              		.loc 1 125 36 is_stmt 0 view .LVU92
 351 004a 0222     		movs	r2, #2
 352 004c 0792     		str	r2, [sp, #28]
 126:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 353              		.loc 1 126 3 is_stmt 1 view .LVU93
 126:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 354              		.loc 1 126 30 is_stmt 0 view .LVU94
 355 004e 0121     		movs	r1, #1
 356 0050 0A91     		str	r1, [sp, #40]
 127:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 357              		.loc 1 127 3 is_stmt 1 view .LVU95
 127:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 358              		.loc 1 127 41 is_stmt 0 view .LVU96
 359 0052 1021     		movs	r1, #16
 360 0054 0B91     		str	r1, [sp, #44]
 128:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 361              		.loc 1 128 3 is_stmt 1 view .LVU97
 128:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 362              		.loc 1 128 34 is_stmt 0 view .LVU98
 363 0056 0D92     		str	r2, [sp, #52]
 129:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 16;
 364              		.loc 1 129 3 is_stmt 1 view .LVU99
 129:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 16;
 365              		.loc 1 129 35 is_stmt 0 view .LVU100
 366 0058 0E93     		str	r3, [sp, #56]
 130:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 336;
 367              		.loc 1 130 3 is_stmt 1 view .LVU101
 130:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 336;
 368              		.loc 1 130 30 is_stmt 0 view .LVU102
 369 005a 0F91     		str	r1, [sp, #60]
 131:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 370              		.loc 1 131 3 is_stmt 1 view .LVU103
 131:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 371              		.loc 1 131 30 is_stmt 0 view .LVU104
 372 005c 4FF4A873 		mov	r3, #336
 373 0060 1093     		str	r3, [sp, #64]
 132:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
ARM GAS  /tmp/cclzpbi3.s 			page 15


 374              		.loc 1 132 3 is_stmt 1 view .LVU105
 132:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 375              		.loc 1 132 30 is_stmt 0 view .LVU106
 376 0062 0423     		movs	r3, #4
 377 0064 1193     		str	r3, [sp, #68]
 133:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 378              		.loc 1 133 3 is_stmt 1 view .LVU107
 133:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 379              		.loc 1 133 30 is_stmt 0 view .LVU108
 380 0066 1292     		str	r2, [sp, #72]
 134:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 381              		.loc 1 134 3 is_stmt 1 view .LVU109
 134:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 382              		.loc 1 134 30 is_stmt 0 view .LVU110
 383 0068 1392     		str	r2, [sp, #76]
 135:Core/Src/main.c ****   {
 384              		.loc 1 135 3 is_stmt 1 view .LVU111
 135:Core/Src/main.c ****   {
 385              		.loc 1 135 7 is_stmt 0 view .LVU112
 386 006a 07A8     		add	r0, sp, #28
 387 006c FFF7FEFF 		bl	HAL_RCC_OscConfig
 388              	.LVL6:
 135:Core/Src/main.c ****   {
 389              		.loc 1 135 6 view .LVU113
 390 0070 80B9     		cbnz	r0, .L17
 141:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 391              		.loc 1 141 3 is_stmt 1 view .LVU114
 141:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 392              		.loc 1 141 31 is_stmt 0 view .LVU115
 393 0072 0F23     		movs	r3, #15
 394 0074 0293     		str	r3, [sp, #8]
 143:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 395              		.loc 1 143 3 is_stmt 1 view .LVU116
 143:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 396              		.loc 1 143 34 is_stmt 0 view .LVU117
 397 0076 0221     		movs	r1, #2
 398 0078 0391     		str	r1, [sp, #12]
 144:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 399              		.loc 1 144 3 is_stmt 1 view .LVU118
 144:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 400              		.loc 1 144 35 is_stmt 0 view .LVU119
 401 007a 0023     		movs	r3, #0
 402 007c 0493     		str	r3, [sp, #16]
 145:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 403              		.loc 1 145 3 is_stmt 1 view .LVU120
 145:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 404              		.loc 1 145 36 is_stmt 0 view .LVU121
 405 007e 4FF48052 		mov	r2, #4096
 406 0082 0592     		str	r2, [sp, #20]
 146:Core/Src/main.c **** 
 407              		.loc 1 146 3 is_stmt 1 view .LVU122
 146:Core/Src/main.c **** 
 408              		.loc 1 146 36 is_stmt 0 view .LVU123
 409 0084 0693     		str	r3, [sp, #24]
 148:Core/Src/main.c ****   {
 410              		.loc 1 148 3 is_stmt 1 view .LVU124
 148:Core/Src/main.c ****   {
ARM GAS  /tmp/cclzpbi3.s 			page 16


 411              		.loc 1 148 7 is_stmt 0 view .LVU125
 412 0086 02A8     		add	r0, sp, #8
 413 0088 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 414              	.LVL7:
 148:Core/Src/main.c ****   {
 415              		.loc 1 148 6 view .LVU126
 416 008c 20B9     		cbnz	r0, .L18
 152:Core/Src/main.c **** 
 417              		.loc 1 152 1 view .LVU127
 418 008e 15B0     		add	sp, sp, #84
 419              	.LCFI6:
 420              		.cfi_remember_state
 421              		.cfi_def_cfa_offset 4
 422              		@ sp needed
 423 0090 5DF804FB 		ldr	pc, [sp], #4
 424              	.L17:
 425              	.LCFI7:
 426              		.cfi_restore_state
 137:Core/Src/main.c ****   }
 427              		.loc 1 137 5 is_stmt 1 view .LVU128
 428 0094 FFF7FEFF 		bl	Error_Handler
 429              	.LVL8:
 430              	.L18:
 150:Core/Src/main.c ****   }
 431              		.loc 1 150 5 view .LVU129
 432 0098 FFF7FEFF 		bl	Error_Handler
 433              	.LVL9:
 434              	.L20:
 435              		.align	2
 436              	.L19:
 437 009c 00380240 		.word	1073887232
 438 00a0 00700040 		.word	1073770496
 439              		.cfi_endproc
 440              	.LFE131:
 442              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 443              		.align	2
 444              	.LC0:
 445 0000 4B616C69 		.ascii	"Kalista\015\012\000"
 445      7374610D 
 445      0A00
 446              		.section	.text.main,"ax",%progbits
 447              		.align	1
 448              		.global	main
 449              		.syntax unified
 450              		.thumb
 451              		.thumb_func
 452              		.fpu fpv4-sp-d16
 454              	main:
 455              	.LFB130:
  67:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 456              		.loc 1 67 1 view -0
 457              		.cfi_startproc
 458              		@ Volatile: function does not return.
 459              		@ args = 0, pretend = 0, frame = 16
 460              		@ frame_needed = 0, uses_anonymous_args = 0
 461 0000 00B5     		push	{lr}
 462              	.LCFI8:
ARM GAS  /tmp/cclzpbi3.s 			page 17


 463              		.cfi_def_cfa_offset 4
 464              		.cfi_offset 14, -4
 465 0002 85B0     		sub	sp, sp, #20
 466              	.LCFI9:
 467              		.cfi_def_cfa_offset 24
  75:Core/Src/main.c **** 
 468              		.loc 1 75 3 view .LVU131
 469 0004 FFF7FEFF 		bl	HAL_Init
 470              	.LVL10:
  82:Core/Src/main.c **** 
 471              		.loc 1 82 3 view .LVU132
 472 0008 FFF7FEFF 		bl	SystemClock_Config
 473              	.LVL11:
  89:Core/Src/main.c ****   MX_USART2_UART_Init();
 474              		.loc 1 89 3 view .LVU133
 475 000c FFF7FEFF 		bl	MX_GPIO_Init
 476              	.LVL12:
  90:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 477              		.loc 1 90 3 view .LVU134
 478 0010 FFF7FEFF 		bl	MX_USART2_UART_Init
 479              	.LVL13:
 480              	.L22:
  97:Core/Src/main.c ****   {
 481              		.loc 1 97 3 discriminator 1 view .LVU135
 482              	.LBB12:
 101:Core/Src/main.c **** 	  HAL_UART_Transmit(&huart2, data, sizeof(data), 10);
 483              		.loc 1 101 4 discriminator 1 view .LVU136
 101:Core/Src/main.c **** 	  HAL_UART_Transmit(&huart2, data, sizeof(data), 10);
 484              		.loc 1 101 12 is_stmt 0 discriminator 1 view .LVU137
 485 0014 074A     		ldr	r2, .L24
 486 0016 01AB     		add	r3, sp, #4
 487 0018 07CA     		ldm	r2, {r0, r1, r2}
 488 001a 03C3     		stmia	r3!, {r0, r1}
 489 001c 1A80     		strh	r2, [r3]	@ movhi
 102:Core/Src/main.c **** 	  HAL_Delay(1000);
 490              		.loc 1 102 4 is_stmt 1 discriminator 1 view .LVU138
 491 001e 0A23     		movs	r3, #10
 492 0020 1A46     		mov	r2, r3
 493 0022 01A9     		add	r1, sp, #4
 494 0024 0448     		ldr	r0, .L24+4
 495 0026 FFF7FEFF 		bl	HAL_UART_Transmit
 496              	.LVL14:
 103:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 497              		.loc 1 103 4 discriminator 1 view .LVU139
 498 002a 4FF47A70 		mov	r0, #1000
 499 002e FFF7FEFF 		bl	HAL_Delay
 500              	.LVL15:
 501              	.LBE12:
  97:Core/Src/main.c ****   {
 502              		.loc 1 97 9 discriminator 1 view .LVU140
 503 0032 EFE7     		b	.L22
 504              	.L25:
 505              		.align	2
 506              	.L24:
 507 0034 00000000 		.word	.LC0
 508 0038 00000000 		.word	huart2
 509              		.cfi_endproc
ARM GAS  /tmp/cclzpbi3.s 			page 18


 510              	.LFE130:
 512              		.comm	huart2,64,4
 513              		.text
 514              	.Letext0:
 515              		.file 3 "/home/faoziaziz/dev/installer/gcc-arm-none-eabi-9-2020-q2-update/arm-none-eabi/include/ma
 516              		.file 4 "/home/faoziaziz/dev/installer/gcc-arm-none-eabi-9-2020-q2-update/arm-none-eabi/include/sy
 517              		.file 5 "Drivers/CMSIS/Include/core_cm4.h"
 518              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 519              		.file 7 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f446xx.h"
 520              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 521              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 522              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 523              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 524              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 525              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 526              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 527              		.file 15 "<built-in>"
ARM GAS  /tmp/cclzpbi3.s 			page 19


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/cclzpbi3.s:18     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/cclzpbi3.s:25     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/cclzpbi3.s:165    .text.MX_GPIO_Init:000000000000009c $d
     /tmp/cclzpbi3.s:173    .text.Error_Handler:0000000000000000 $t
     /tmp/cclzpbi3.s:180    .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/cclzpbi3.s:212    .text.MX_USART2_UART_Init:0000000000000000 $t
     /tmp/cclzpbi3.s:218    .text.MX_USART2_UART_Init:0000000000000000 MX_USART2_UART_Init
     /tmp/cclzpbi3.s:273    .text.MX_USART2_UART_Init:000000000000002c $d
                            *COM*:0000000000000040 huart2
     /tmp/cclzpbi3.s:279    .text.SystemClock_Config:0000000000000000 $t
     /tmp/cclzpbi3.s:286    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/cclzpbi3.s:437    .text.SystemClock_Config:000000000000009c $d
     /tmp/cclzpbi3.s:443    .rodata.main.str1.4:0000000000000000 $d
     /tmp/cclzpbi3.s:447    .text.main:0000000000000000 $t
     /tmp/cclzpbi3.s:454    .text.main:0000000000000000 main
     /tmp/cclzpbi3.s:507    .text.main:0000000000000034 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_UART_Init
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
HAL_UART_Transmit
HAL_Delay
